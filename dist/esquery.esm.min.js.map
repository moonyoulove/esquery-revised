{"version":3,"file":"esquery.esm.min.js","sources":["../node_modules/estraverse/estraverse.js","../parser.js","../esquery.js"],"sourcesContent":["/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        PrivateIdentifier: 'PrivateIdentifier',\n        Program: 'Program',\n        Property: 'Property',\n        PropertyDefinition: 'PropertyDefinition',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        PrivateIdentifier: [],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        PropertyDefinition: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  }\n})(this, function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(ss) {\r\n            return ss.length === 1 ? ss[0] : { type: 'matches', selectors: ss };\r\n          },\n        peg$c1 = function() { return void 0; },\n        peg$c2 = \" \",\n        peg$c3 = peg$literalExpectation(\" \", false),\n        peg$c4 = /^[^ [\\],():#!=><~+.]/,\n        peg$c5 = peg$classExpectation([\" \", \"[\", \"]\", \",\", \"(\", \")\", \":\", \"#\", \"!\", \"=\", \">\", \"<\", \"~\", \"+\", \".\"], true, false),\n        peg$c6 = function(i) { return i.join(''); },\n        peg$c7 = \">\",\n        peg$c8 = peg$literalExpectation(\">\", false),\n        peg$c9 = function() { return 'child'; },\n        peg$c10 = \"~\",\n        peg$c11 = peg$literalExpectation(\"~\", false),\n        peg$c12 = function() { return 'sibling'; },\n        peg$c13 = \"+\",\n        peg$c14 = peg$literalExpectation(\"+\", false),\n        peg$c15 = function() { return 'adjacent'; },\n        peg$c16 = function() { return 'descendant'; },\n        peg$c17 = \",\",\n        peg$c18 = peg$literalExpectation(\",\", false),\n        peg$c19 = function(s, ss) {\r\n          return [s].concat(ss.map(function (s) { return s[3]; }));\r\n        },\n        peg$c20 = function(a, ops) {\r\n            return ops.reduce(function (memo, rhs) {\r\n              return { type: rhs[0], left: memo, right: rhs[1] };\r\n            }, a);\r\n          },\n        peg$c21 = \"!\",\n        peg$c22 = peg$literalExpectation(\"!\", false),\n        peg$c23 = function(subject, as) {\r\n            const b = as.length === 1 ? as[0] : { type: 'compound', selectors: as };\r\n            if(subject) b.subject = true;\r\n            return b;\r\n          },\n        peg$c24 = \"*\",\n        peg$c25 = peg$literalExpectation(\"*\", false),\n        peg$c26 = function(a) { return { type: 'wildcard', value: a }; },\n        peg$c27 = \"#\",\n        peg$c28 = peg$literalExpectation(\"#\", false),\n        peg$c29 = function(i) { return { type: 'identifier', value: i }; },\n        peg$c30 = \"[\",\n        peg$c31 = peg$literalExpectation(\"[\", false),\n        peg$c32 = \"]\",\n        peg$c33 = peg$literalExpectation(\"]\", false),\n        peg$c34 = function(v) { return v; },\n        peg$c35 = /^[><!]/,\n        peg$c36 = peg$classExpectation([\">\", \"<\", \"!\"], false, false),\n        peg$c37 = \"=\",\n        peg$c38 = peg$literalExpectation(\"=\", false),\n        peg$c39 = function(a) { return (a || '') + '='; },\n        peg$c40 = /^[><]/,\n        peg$c41 = peg$classExpectation([\">\", \"<\"], false, false),\n        peg$c42 = \".\",\n        peg$c43 = peg$literalExpectation(\".\", false),\n        peg$c44 = function(a, as) {\r\n            return [].concat.apply([a], as).join('');\r\n          },\n        peg$c45 = function(name, op, value) {\r\n              return { type: 'attribute', name: name, operator: op, value: value };\r\n            },\n        peg$c46 = function(name) { return { type: 'attribute', name: name }; },\n        peg$c47 = \"\\\"\",\n        peg$c48 = peg$literalExpectation(\"\\\"\", false),\n        peg$c49 = /^[^\\\\\"]/,\n        peg$c50 = peg$classExpectation([\"\\\\\", \"\\\"\"], true, false),\n        peg$c51 = \"\\\\\",\n        peg$c52 = peg$literalExpectation(\"\\\\\", false),\n        peg$c53 = peg$anyExpectation(),\n        peg$c54 = function(a, b) { return a + b; },\n        peg$c55 = function(d) {\r\n                return { type: 'literal', value: strUnescape(d.join('')) };\r\n              },\n        peg$c56 = \"'\",\n        peg$c57 = peg$literalExpectation(\"'\", false),\n        peg$c58 = /^[^\\\\']/,\n        peg$c59 = peg$classExpectation([\"\\\\\", \"'\"], true, false),\n        peg$c60 = /^[0-9]/,\n        peg$c61 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c62 = function(a, b) {\r\n                // Can use `a.flat().join('')` once supported\r\n                const leadingDecimals = a ? [].concat.apply([], a).join('') : '';\r\n                return { type: 'literal', value: parseFloat(leadingDecimals + b.join('')) };\r\n              },\n        peg$c63 = function(i) { return { type: 'literal', value: i }; },\n        peg$c64 = \"type(\",\n        peg$c65 = peg$literalExpectation(\"type(\", false),\n        peg$c66 = /^[^ )]/,\n        peg$c67 = peg$classExpectation([\" \", \")\"], true, false),\n        peg$c68 = \")\",\n        peg$c69 = peg$literalExpectation(\")\", false),\n        peg$c70 = function(t) { return { type: 'type', value: t.join('') }; },\n        peg$c71 = /^[imsu]/,\n        peg$c72 = peg$classExpectation([\"i\", \"m\", \"s\", \"u\"], false, false),\n        peg$c73 = \"/\",\n        peg$c74 = peg$literalExpectation(\"/\", false),\n        peg$c75 = /^[^\\/]/,\n        peg$c76 = peg$classExpectation([\"/\"], true, false),\n        peg$c77 = function(d, flgs) { return {\r\n              type: 'regexp', value: new RegExp(d.join(''), flgs ? flgs.join('') : '') };\r\n            },\n        peg$c78 = function(i, is) {\r\n          return { type: 'field', name: is.reduce(function(memo, p){ return memo + p[0] + p[1]; }, i)};\r\n        },\n        peg$c79 = \":not(\",\n        peg$c80 = peg$literalExpectation(\":not(\", false),\n        peg$c81 = function(ss) { return { type: 'not', selectors: ss }; },\n        peg$c82 = \":matches(\",\n        peg$c83 = peg$literalExpectation(\":matches(\", false),\n        peg$c84 = function(ss) { return { type: 'matches', selectors: ss }; },\n        peg$c85 = \":has(\",\n        peg$c86 = peg$literalExpectation(\":has(\", false),\n        peg$c87 = function(ss) { return { type: 'has', selectors: ss }; },\n        peg$c88 = \":first-child\",\n        peg$c89 = peg$literalExpectation(\":first-child\", false),\n        peg$c90 = function() { return nth(1); },\n        peg$c91 = \":last-child\",\n        peg$c92 = peg$literalExpectation(\":last-child\", false),\n        peg$c93 = function() { return nthLast(1); },\n        peg$c94 = \":nth-child(\",\n        peg$c95 = peg$literalExpectation(\":nth-child(\", false),\n        peg$c96 = function(n) { return nth(parseInt(n.join(''), 10)); },\n        peg$c97 = \":nth-last-child(\",\n        peg$c98 = peg$literalExpectation(\":nth-last-child(\", false),\n        peg$c99 = function(n) { return nthLast(parseInt(n.join(''), 10)); },\n        peg$c100 = \":scope\",\n        peg$c101 = peg$literalExpectation(\":scope\", false),\n        peg$c102 = function() { return { type: 'scope' }; },\n        peg$c103 = \":\",\n        peg$c104 = peg$literalExpectation(\":\", false),\n        peg$c105 = function(c) {\r\n          return { type: 'class', name: c };\r\n        },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$resultsCache = {},\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 31 + 0,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselectors();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1();\n        }\n        s0 = s1;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      var key    = peg$currPos * 31 + 1,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c3); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c2;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifierName() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 31 + 2,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c4.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c4.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c6(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsebinaryOp() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 31 + 3,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s2 = peg$c7;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c9();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 126) {\n            s2 = peg$c10;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c12();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s2 = peg$c13;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s1 = peg$c2;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c16();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselectors() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 31 + 4,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseselector();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c17;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseselector();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseselector();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c19(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 5,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsesequence();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsebinaryOp();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsesequence();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsebinaryOp();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesequence();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesequence() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 31 + 6,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseatom();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseatom();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c23(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseatom() {\n      var s0;\n\n      var key    = peg$currPos * 31 + 7,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$parsewildcard();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseidentifier();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseattr();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsefield();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsenegation();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsematches();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsehas();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsefirstChild();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parselastChild();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parsenthChild();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsenthLastChild();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parsescope();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseclass();\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsewildcard() {\n      var s0, s1;\n\n      var key    = peg$currPos * 31 + 8,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s1 = peg$c24;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c26(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 31 + 9,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 10,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c30;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrValue();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c32;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c33); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 31 + 11,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (peg$c35.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrEqOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 31 + 12,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrName() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 13,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c42;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseidentifierName();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c42;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseidentifierName();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrValue() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 14,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseattrName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrEqOps();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsetype();\n              if (s5 === peg$FAILED) {\n                s5 = peg$parseregex();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c45(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseattrName();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrOps();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsestring();\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parsenumber();\n                  if (s5 === peg$FAILED) {\n                    s5 = peg$parsepath();\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c45(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseattrName();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c46(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 15,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s4 = peg$c51;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c53); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c54(s4, s5);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c47;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c56;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c57); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          if (peg$c58.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c59); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c58.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c59); }\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s3 = peg$c56;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c55(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 31 + 16,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c60.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c61); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s3 = peg$c42;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c61); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c62(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsepath() {\n      var s0, s1;\n\n      var key    = peg$currPos * 31 + 17,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c63(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetype() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 18,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c64) {\n        s1 = peg$c64;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c66.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c66.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c67); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c70(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseflags() {\n      var s0, s1;\n\n      var key    = peg$currPos * 31 + 19,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (peg$c71.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c71.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseregex() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 31 + 20,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c75.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c75.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c76); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c73;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseflags();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c77(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefield() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 31 + 21,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c42;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c42;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseidentifierName();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseidentifierName();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c78(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenegation() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 22,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c79) {\n        s1 = peg$c79;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c81(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsematches() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 23,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 9) === peg$c82) {\n        s1 = peg$c82;\n        peg$currPos += 9;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c84(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsehas() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 24,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c85) {\n        s1 = peg$c85;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefirstChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 31 + 25,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 12) === peg$c88) {\n        s1 = peg$c88;\n        peg$currPos += 12;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parselastChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 31 + 26,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c91) {\n        s1 = peg$c91;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c93();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 27,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c94) {\n        s1 = peg$c94;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c96(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthLastChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 31 + 28,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 16) === peg$c97) {\n        s1 = peg$c97;\n        peg$currPos += 16;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c99(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsescope() {\n      var s0, s1;\n\n      var key    = peg$currPos * 31 + 29,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c100) {\n        s1 = peg$c100;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c101); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c102();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseclass() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 31 + 30,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c103;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c104); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c105(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n\r\n      function nth(n) { return { type: 'nth-child', index: { type: 'literal', value: n } }; }\r\n      function nthLast(n) { return { type: 'nth-last-child', index: { type: 'literal', value: n } }; }\r\n      function strUnescape(s) {\r\n        return s.replace(/\\\\(.)/g, function(match, ch) {\r\n          switch(ch) {\r\n            case 'b': return '\\b';\r\n            case 'f': return '\\f';\r\n            case 'n': return '\\n';\r\n            case 'r': return '\\r';\r\n            case 't': return '\\t';\r\n            case 'v': return '\\v';\r\n            default: return ch;\r\n          }\r\n        });\r\n      }\r\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n});\n","/* vim: set sw=4 sts=4 : */\r\nimport estraverse from 'estraverse';\r\nimport parser from './parser.js';\r\n\r\n/**\r\n* @typedef {\"LEFT_SIDE\"|\"RIGHT_SIDE\"} Side\r\n*/\r\n\r\nconst LEFT_SIDE = 'LEFT_SIDE';\r\nconst RIGHT_SIDE = 'RIGHT_SIDE';\r\n\r\n/**\r\n * @external AST\r\n * @see https://esprima.readthedocs.io/en/latest/syntax-tree-format.html\r\n */\r\n\r\n/**\r\n * One of the rules of `grammar.pegjs`\r\n * @typedef {PlainObject} SelectorAST\r\n * @see grammar.pegjs\r\n*/\r\n\r\n/**\r\n * The `sequence` production of `grammar.pegjs`\r\n * @typedef {PlainObject} SelectorSequenceAST\r\n*/\r\n\r\n/**\r\n * Get the value of a property which may be multiple levels down\r\n * in the object.\r\n * @param {?PlainObject} obj\r\n * @param {string[]} keys\r\n * @returns {undefined|boolean|string|number|external:AST}\r\n */\r\nfunction getPath(obj, keys) {\r\n    for (let i = 0; i < keys.length; ++i) {\r\n        if (obj == null) { return obj; }\r\n        obj = obj[keys[i]];\r\n    }\r\n    return obj;\r\n}\r\n\r\n/**\r\n * Determine whether `node` can be reached by following `path`,\r\n * starting at `ancestor`.\r\n * @param {?external:AST} node\r\n * @param {?external:AST} ancestor\r\n * @param {string[]} path\r\n * @param {Integer} fromPathIndex\r\n * @returns {boolean}\r\n */\r\nfunction inPath(node, ancestor, path, fromPathIndex) {\r\n    let current = ancestor;\r\n    for (let i = fromPathIndex; i < path.length; ++i) {\r\n        if (current == null) {\r\n            return false;\r\n        }\r\n        const field = current[path[i]];\r\n        if (Array.isArray(field)) {\r\n            for (let k = 0; k < field.length; ++k) {\r\n                if (inPath(node, field[k], path, i + 1)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        current = field;\r\n    }\r\n    return node === current;\r\n}\r\n\r\n/**\r\n * A generated matcher function for a selector.\r\n * @typedef {function} SelectorMatcher\r\n*/\r\n\r\n/**\r\n * A WeakMap for holding cached matcher functions for selectors.\r\n * @type {WeakMap<SelectorAST, SelectorMatcher>}\r\n*/\r\nconst MATCHER_CACHE = typeof WeakMap === 'function' ? new WeakMap : null;\r\n\r\n/**\r\n * Look up a matcher function for `selector` in the cache.\r\n * If it does not exist, generate it with `generateMatcher` and add it to the cache.\r\n * In engines without WeakMap, the caching is skipped and matchers are generated with every call.\r\n * @param {?SelectorAST} selector\r\n * @returns {SelectorMatcher}\r\n */\r\nfunction getMatcher(selector) {\r\n    if (selector == null) {\r\n        return () => true;\r\n    }\r\n\r\n    if (MATCHER_CACHE != null) {\r\n        let matcher = MATCHER_CACHE.get(selector);\r\n        if (matcher != null) {\r\n            return matcher;\r\n        }\r\n        matcher = generateMatcher(selector);\r\n        MATCHER_CACHE.set(selector, matcher);\r\n        return matcher;\r\n    }\r\n\r\n    return generateMatcher(selector);\r\n}\r\n\r\n/**\r\n * Create a matcher function for `selector`,\r\n * @param {?SelectorAST} selector\r\n * @returns {SelectorMatcher}\r\n */\r\nfunction generateMatcher(selector) {\r\n    switch(selector.type) {\r\n        case 'wildcard':\r\n            return () => true;\r\n\r\n        case 'identifier': {\r\n            const value = selector.value.toLowerCase();\r\n            return (node, ancestry, options) => {\r\n                const nodeTypeKey = (options && options.nodeTypeKey) || 'type';\r\n                return value === node[nodeTypeKey].toLowerCase();\r\n            };\r\n        }\r\n\r\n        case 'field': {\r\n            const path = selector.name.split('.');\r\n            return (node, ancestry) => {\r\n                const ancestor = ancestry[path.length - 1];\r\n                return inPath(node, ancestor, path, 0);\r\n            };\r\n        }\r\n\r\n        case 'matches': {\r\n            const matchers = selector.selectors.map(getMatcher);\r\n            return (node, ancestry, options) => {\r\n                for (let i = 0; i < matchers.length; ++i) {\r\n                    if (matchers[i](node, ancestry, options)) { return true; }\r\n                }\r\n                return false;\r\n            };\r\n        }\r\n\r\n        case 'compound': {\r\n            const matchers = selector.selectors.map(getMatcher);\r\n            return (node, ancestry, options) => {\r\n                for (let i = 0; i < matchers.length; ++i) {\r\n                    if (!matchers[i](node, ancestry, options)) { return false; }\r\n                }\r\n                return true;\r\n            };\r\n        }\r\n\r\n        case 'not': {\r\n            const matchers = selector.selectors.map(getMatcher);\r\n            return (node, ancestry, options) => {\r\n                for (let i = 0; i < matchers.length; ++i) {\r\n                    if (matchers[i](node, ancestry, options)) { return false; }\r\n                }\r\n                return true;\r\n            };\r\n        }\r\n\r\n        case 'has': {\r\n            const matchers = selector.selectors.map(getMatcher);\r\n            return (node, ancestry, options) => {\r\n                let result = false;\r\n\r\n                const a = [];\r\n                estraverse.traverse(node, {\r\n                    enter (node, parent) {\r\n                        if (parent != null) { a.unshift(parent); }\r\n\r\n                        for (let i = 0; i < matchers.length; ++i) {\r\n                            if (matchers[i](node, a, options)) {\r\n                                result = true;\r\n                                this.break();\r\n                                return;\r\n                            }\r\n                        }\r\n                    },\r\n                    leave () { a.shift(); },\r\n                    keys: options && options.visitorKeys,\r\n                    fallback: options && options.fallback || 'iteration'\r\n                });\r\n\r\n                return result;\r\n            };\r\n        }\r\n\r\n        case 'child': {\r\n            const left = getMatcher(selector.left);\r\n            const right = getMatcher(selector.right);\r\n            return (node, ancestry, options) => {\r\n                if (ancestry.length > 0 && right(node, ancestry, options)) {\r\n                    return left(ancestry[0], ancestry.slice(1), options);\r\n                }\r\n                return false;\r\n            };\r\n        }\r\n\r\n        case 'descendant': {\r\n            const left = getMatcher(selector.left);\r\n            const right = getMatcher(selector.right);\r\n            return (node, ancestry, options) => {\r\n                if (right(node, ancestry, options)) {\r\n                    for (let i = 0, l = ancestry.length; i < l; ++i) {\r\n                        if (left(ancestry[i], ancestry.slice(i + 1), options)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n        }\r\n\r\n        case 'attribute': {\r\n            const path = selector.name.split('.');\r\n            switch (selector.operator) {\r\n                case void 0:\r\n                    return (node) => getPath(node, path) != null;\r\n                case '=':\r\n                    switch (selector.value.type) {\r\n                        case 'regexp':\r\n                            return (node) => {\r\n                                const p = getPath(node, path);\r\n                                return typeof p === 'string' && selector.value.value.test(p);\r\n                            };\r\n                        case 'literal': {\r\n                            const literal = `${selector.value.value}`;\r\n                            return (node) => literal === `${getPath(node, path)}`;\r\n                        }\r\n                        case 'type':\r\n                            return (node) => selector.value.value === typeof getPath(node, path);\r\n                    }\r\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\r\n                case '!=':\r\n                    switch (selector.value.type) {\r\n                        case 'regexp':\r\n                            return (node) => !selector.value.value.test(getPath(node, path));\r\n                        case 'literal': {\r\n                            const literal = `${selector.value.value}`;\r\n                            return (node) => literal !== `${getPath(node, path)}`;\r\n                        }\r\n                        case 'type':\r\n                            return (node) => selector.value.value !== typeof getPath(node, path);\r\n                    }\r\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\r\n                case '<=':\r\n                    return (node) => getPath(node, path) <= selector.value.value;\r\n                case '<':\r\n                    return (node) => getPath(node, path) < selector.value.value;\r\n                case '>':\r\n                    return (node) => getPath(node, path) > selector.value.value;\r\n                case '>=':\r\n                    return (node) => getPath(node, path) >= selector.value.value;\r\n            }\r\n            throw new Error(`Unknown operator: ${selector.operator}`);\r\n        }\r\n\r\n        case 'sibling': {\r\n            const left = getMatcher(selector.left);\r\n            const right = getMatcher(selector.right);\r\n            return (node, ancestry, options) =>\r\n                right(node, ancestry, options) &&\r\n                    sibling(node, left, ancestry, LEFT_SIDE, options) ||\r\n                    selector.left.subject &&\r\n                    left(node, ancestry, options) &&\r\n                    sibling(node, right, ancestry, RIGHT_SIDE, options);\r\n        }\r\n\r\n        case 'adjacent': {\r\n            const left = getMatcher(selector.left);\r\n            const right = getMatcher(selector.right);\r\n            return (node, ancestry, options) =>\r\n                right(node, ancestry, options) &&\r\n                    adjacent(node, left, ancestry, LEFT_SIDE, options) ||\r\n                    selector.right.subject &&\r\n                    left(node, ancestry, options) &&\r\n                    adjacent(node, right, ancestry, RIGHT_SIDE, options);\r\n        }\r\n\r\n        case 'nth-child': {\r\n            const nth = selector.index.value;\r\n            const right = getMatcher(selector.right);\r\n            return (node, ancestry, options) =>\r\n                right(node, ancestry, options) &&\r\n                    nthChild(node, ancestry, nth, options);\r\n        }\r\n\r\n        case 'nth-last-child': {\r\n            const nth = -selector.index.value;\r\n            const right = getMatcher(selector.right);\r\n            return (node, ancestry, options) =>\r\n                right(node, ancestry, options) &&\r\n                    nthChild(node, ancestry, nth, options);\r\n        }\r\n\r\n        case 'class': {\r\n            \r\n            const name = selector.name.toLowerCase();\r\n\r\n            return (node, ancestry, options) => {\r\n                \r\n                if (options && options.matchClass) {\r\n                    return options.matchClass(selector.name, node, ancestry);\r\n                }\r\n                \r\n                if (options && options.nodeTypeKey) return false;    \r\n\r\n                switch(name){\r\n                    case 'statement':\r\n                        if(node.type.slice(-9) === 'Statement') return true;\r\n                        // fallthrough: interface Declaration <: Statement { }\r\n                    case 'declaration':\r\n                        return node.type.slice(-11) === 'Declaration';\r\n                    case 'pattern':\r\n                        if(node.type.slice(-7) === 'Pattern') return true;\r\n                        // fallthrough: interface Expression <: Node, Pattern { }\r\n                    case 'expression':\r\n                        return node.type.slice(-10) === 'Expression' ||\r\n                            node.type.slice(-7) === 'Literal' ||\r\n                            (\r\n                                node.type === 'Identifier' &&\r\n                                (ancestry.length === 0 || ancestry[0].type !== 'MetaProperty')\r\n                            ) ||\r\n                            node.type === 'MetaProperty';\r\n                    case 'function':\r\n                        return node.type === 'FunctionDeclaration' ||\r\n                            node.type === 'FunctionExpression' ||\r\n                            node.type === 'ArrowFunctionExpression';\r\n                }\r\n                throw new Error(`Unknown class name: ${selector.name}`);\r\n            };\r\n        }\r\n\r\n        case 'scope': {\r\n            return (node, ancestry) => ancestry.length === 0;\r\n        }\r\n    }\r\n\r\n    throw new Error(`Unknown selector type: ${selector.type}`);\r\n}\r\n\r\n/**\r\n * @callback TraverseOptionFallback\r\n * @param {external:AST} node The given node.\r\n * @returns {string[]} An array of visitor keys for the given node.\r\n */\r\n\r\n/**\r\n * @callback ClassMatcher\r\n * @param {string} className The name of the class to match.\r\n * @param {external:AST} node The node to match against.\r\n * @param {Array<external:AST>} ancestry The ancestry of the node.\r\n * @returns {boolean} True if the node matches the class, false if not.\r\n */\r\n\r\n/**\r\n * @typedef {object} ESQueryOptions\r\n * @property {string} [nodeTypeKey=\"type\"] By passing `nodeTypeKey`, we can allow other ASTs to use ESQuery.\r\n * @property { { [nodeType: string]: string[] } } [visitorKeys] By passing `visitorKeys` mapping, we can extend the properties of the nodes that traverse the node.\r\n * @property {TraverseOptionFallback} [fallback] By passing `fallback` option, we can control the properties of traversing nodes when encountering unknown nodes.\r\n * @property {ClassMatcher} [matchClass] By passing `matchClass` option, we can customize the interpretation of classes.\r\n */\r\n\r\n/**\r\n * Given a `node` and its ancestors, determine if `node` is matched\r\n * by `selector`.\r\n * @param {?external:AST} node\r\n * @param {?SelectorAST} selector\r\n * @param {external:AST[]} [ancestry=[]]\r\n * @param {ESQueryOptions} [options]\r\n * @throws {Error} Unknowns (operator, class name, selector type, or\r\n * selector value type)\r\n * @returns {boolean}\r\n */\r\nfunction matches(node, selector, ancestry, options) {\r\n    if (!selector) { return true; }\r\n    if (!node) { return false; }\r\n    if (!ancestry) { ancestry = []; }\r\n\r\n    return getMatcher(selector)(node, ancestry, options);\r\n}\r\n\r\n/**\r\n * Get visitor keys of a given node.\r\n * @param {external:AST} node The AST node to get keys.\r\n * @param {ESQueryOptions|undefined} options\r\n * @returns {string[]} Visitor keys of the node.\r\n */\r\nfunction getVisitorKeys(node, options) {\r\n    const nodeTypeKey = (options && options.nodeTypeKey) || 'type';\r\n\r\n    const nodeType = node[nodeTypeKey];\r\n    if (options && options.visitorKeys && options.visitorKeys[nodeType]) {\r\n        return options.visitorKeys[nodeType];\r\n    }\r\n    if (estraverse.VisitorKeys[nodeType]) {\r\n        return estraverse.VisitorKeys[nodeType];\r\n    }\r\n    if (options && typeof options.fallback === 'function') {\r\n        return options.fallback(node);\r\n    }\r\n    // 'iteration' fallback\r\n    return Object.keys(node).filter(function (key) {\r\n        return key !== nodeTypeKey;\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Check whether the given value is an ASTNode or not.\r\n * @param {any} node The value to check.\r\n * @param {ESQueryOptions|undefined} options The options to use.\r\n * @returns {boolean} `true` if the value is an ASTNode.\r\n */\r\nfunction isNode(node, options) {\r\n    const nodeTypeKey = (options && options.nodeTypeKey) || 'type';\r\n    return node !== null && typeof node === 'object' && typeof node[nodeTypeKey] === 'string';\r\n}\r\n\r\n/**\r\n * Determines if the given node has a sibling that matches the\r\n * given selector matcher.\r\n * @param {external:AST} node\r\n * @param {SelectorMatcher} matcher\r\n * @param {external:AST[]} ancestry\r\n * @param {Side} side\r\n * @param {ESQueryOptions|undefined} options\r\n * @returns {boolean}\r\n */\r\nfunction sibling(node, matcher, ancestry, side, options) {\r\n    const [parent] = ancestry;\r\n    if (!parent) { return false; }\r\n    const keys = getVisitorKeys(parent, options);\r\n    for (let i = 0; i < keys.length; ++i) {\r\n        const listProp = parent[keys[i]];\r\n        if (Array.isArray(listProp)) {\r\n            const startIndex = listProp.indexOf(node);\r\n            if (startIndex < 0) { continue; }\r\n            let lowerBound, upperBound;\r\n            if (side === LEFT_SIDE) {\r\n                lowerBound = 0;\r\n                upperBound = startIndex;\r\n            } else {\r\n                lowerBound = startIndex + 1;\r\n                upperBound = listProp.length;\r\n            }\r\n            for (let k = lowerBound; k < upperBound; ++k) {\r\n                if (isNode(listProp[k], options) && matcher(listProp[k], ancestry, options)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Determines if the given node has an adjacent sibling that matches\r\n * the given selector matcher.\r\n * @param {external:AST} node\r\n * @param {SelectorMatcher} matcher\r\n * @param {external:AST[]} ancestry\r\n * @param {Side} side\r\n * @param {ESQueryOptions|undefined} options\r\n * @returns {boolean}\r\n */\r\nfunction adjacent(node, matcher, ancestry, side, options) {\r\n    const [parent] = ancestry;\r\n    if (!parent) { return false; }\r\n    const keys = getVisitorKeys(parent, options);\r\n    for (let i = 0; i < keys.length; ++i) {\r\n        const listProp = parent[keys[i]];\r\n        if (Array.isArray(listProp)) {\r\n            const idx = listProp.indexOf(node);\r\n            if (idx < 0) { continue; }\r\n            if (side === LEFT_SIDE && idx > 0 && isNode(listProp[idx - 1], options) && matcher(listProp[idx - 1], ancestry, options)) {\r\n                return true;\r\n            }\r\n            if (side === RIGHT_SIDE && idx < listProp.length - 1 && isNode(listProp[idx + 1], options) &&  matcher(listProp[idx + 1], ancestry, options)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Determines if the given node is the `nth` child.\r\n * If `nth` is negative then the position is counted\r\n * from the end of the list of children.\r\n * @param {external:AST} node\r\n * @param {external:AST[]} ancestry\r\n * @param {Integer} nth\r\n * @param {ESQueryOptions|undefined} options\r\n * @returns {boolean}\r\n */\r\nfunction nthChild(node, ancestry, nth, options) {\r\n    if (nth === 0) { return false; }\r\n    const [parent] = ancestry;\r\n    if (!parent) { return false; }\r\n    const keys = getVisitorKeys(parent, options);\r\n    for (let i = 0; i < keys.length; ++i) {\r\n        const listProp = parent[keys[i]];\r\n        if (Array.isArray(listProp)){\r\n            const idx = nth < 0 ? listProp.length + nth : nth - 1;\r\n            if (idx >= 0 && idx < listProp.length && listProp[idx] === node) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * For each selector node marked as a subject, find the portion of the\r\n * selector that the subject must match.\r\n * @param {SelectorAST} selector\r\n * @param {SelectorAST} [ancestor] Defaults to `selector`\r\n * @returns {SelectorAST[]}\r\n */\r\nfunction subjects(selector, ancestor) {\r\n    if (selector == null || typeof selector != 'object') { return []; }\r\n    if (ancestor == null) { ancestor = selector; }\r\n    const results = selector.subject ? [ancestor] : [];\r\n    const keys = Object.keys(selector);\r\n    for (let i = 0; i < keys.length; ++i) {\r\n        const p = keys[i];\r\n        const sel = selector[p];\r\n        results.push(...subjects(sel, p === 'left' ? sel : ancestor));\r\n    }\r\n    return results;\r\n}\r\n\r\n/**\r\n* @callback TraverseVisitor\r\n* @param {?external:AST} node\r\n* @param {?external:AST} parent\r\n* @param {external:AST[]} ancestry\r\n*/\r\n\r\n/**\r\n * From a JS AST and a selector AST, collect all JS AST nodes that\r\n * match the selector.\r\n * @param {external:AST} ast\r\n * @param {?SelectorAST} selector\r\n * @param {TraverseVisitor} visitor\r\n * @param {ESQueryOptions} [options]\r\n * @returns {external:AST[]}\r\n */\r\nfunction traverse(ast, selector, visitor, options) {\r\n    if (!selector) { return; }\r\n    const ancestry = [];\r\n    const matcher = getMatcher(selector);\r\n    const altSubjects = subjects(selector).map(getMatcher);\r\n    estraverse.traverse(ast, {\r\n        enter (node, parent) {\r\n            if (parent != null) { ancestry.unshift(parent); }\r\n            if (matcher(node, ancestry, options)) {\r\n                if (altSubjects.length) {\r\n                    for (let i = 0, l = altSubjects.length; i < l; ++i) {\r\n                        if (altSubjects[i](node, ancestry, options)) {\r\n                            visitor(node, parent, ancestry);\r\n                        }\r\n                        for (let k = 0, m = ancestry.length; k < m; ++k) {\r\n                            const succeedingAncestry = ancestry.slice(k + 1);\r\n                            if (altSubjects[i](ancestry[k], succeedingAncestry, options)) {\r\n                                visitor(ancestry[k], parent, succeedingAncestry);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    visitor(node, parent, ancestry);\r\n                }\r\n            }\r\n        },\r\n        leave () { ancestry.shift(); },\r\n        keys: options && options.visitorKeys,\r\n        fallback: options && options.fallback || 'iteration'\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * From a JS AST and a selector AST, collect all JS AST nodes that\r\n * match the selector.\r\n * @param {external:AST} ast\r\n * @param {?SelectorAST} selector\r\n * @param {ESQueryOptions} [options]\r\n * @returns {external:AST[]}\r\n */\r\nfunction match(ast, selector, options) {\r\n    const results = [];\r\n    traverse(ast, selector, function (node) {\r\n        results.push(node);\r\n    }, options);\r\n    return results;\r\n}\r\n\r\n/**\r\n * Parse a selector string and return its AST.\r\n * @param {string} selector\r\n * @returns {SelectorAST}\r\n */\r\nfunction parse(selector) {\r\n    return parser.parse(selector);\r\n}\r\n\r\n/**\r\n * Query the code AST using the selector string.\r\n * @param {external:AST} ast\r\n * @param {string} selector\r\n * @param {ESQueryOptions} [options]\r\n * @returns {external:AST[]}\r\n */\r\nfunction query(ast, selector, options) {\r\n    return match(ast, parse(selector), options);\r\n}\r\n\r\nquery.parse = parse;\r\nquery.match = match;\r\nquery.traverse = traverse;\r\nquery.matches = matches;\r\nquery.query = query;\r\n\r\nexport default query;\r\n"],"names":["clone","exports","Syntax","VisitorOption","VisitorKeys","BREAK","SKIP","REMOVE","deepCopy","obj","key","val","ret","hasOwnProperty","Reference","parent","this","Element","node","path","wrap","ref","Controller","isNode","type","isProperty","nodeType","ObjectExpression","ObjectPattern","candidateExistsInLeaveList","leavelist","candidate","i","length","traverse","root","visitor","extendCommentRange","comment","tokens","target","array","func","diff","len","current","upperBound","token","range","extendedRange","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ChainExpression","ClassBody","ClassDeclaration","ClassExpression","ComprehensionBlock","ComprehensionExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","GeneratorExpression","Identifier","IfStatement","ImportExpression","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","ModuleSpecifier","NewExpression","PrivateIdentifier","Program","Property","PropertyDefinition","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchStatement","SwitchCase","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Break","Skip","Remove","prototype","replace","remove","Array","isArray","splice","iz","j","jz","result","addToPath","push","__current","__leavelist","parents","__execute","callback","element","previous","undefined","__state","call","notify","flag","skip","__initialize","__worklist","__fallback","fallback","Object","keys","__keys","assign","create","worklist","current2","candidates","sentinel","pop","enter","Error","leave","outer","removeElem","nextElem","attachComments","tree","providedComments","cursor","comments","leadingComments","trailingComments","cloneEnvironment","module","peg$SyntaxError","message","expected","found","location","name","captureStackTrace","child","ctor","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","descriptions","sort","slice","join","describeExpected","describeFound","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","peg$literalExpectation","peg$c4","peg$c5","peg$classExpectation","peg$c8","peg$c11","peg$c14","peg$c18","peg$c22","peg$c25","peg$c28","peg$c31","peg$c33","peg$c35","peg$c36","peg$c38","peg$c39","a","peg$c40","peg$c41","peg$c43","peg$c45","op","value","operator","peg$c48","peg$c49","peg$c50","peg$c52","peg$c53","peg$c54","b","peg$c55","d","match","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c65","peg$c66","peg$c67","peg$c69","peg$c71","peg$c72","peg$c74","peg$c75","peg$c76","peg$c80","peg$c83","peg$c86","peg$c89","peg$c92","peg$c95","peg$c98","peg$c101","peg$c104","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","s0","s1","s2","ss","cached","peg$resultsCache","nextPos","peg$parse_","peg$parseselectors","selectors","peg$c1","peg$parseidentifierName","test","charAt","peg$parsebinaryOp","s3","s4","s5","s6","s7","peg$parseselector","concat","map","peg$parsesequence","reduce","memo","rhs","left","right","subject","as","peg$parseatom","peg$parsewildcard","peg$parseidentifier","peg$parseattrName","peg$parseattrEqOps","substr","peg$parsetype","flgs","peg$parseflags","RegExp","peg$parseregex","peg$parseattrOps","peg$parsestring","leadingDecimals","apply","parseFloat","peg$parsenumber","peg$parsepath","peg$parseattrValue","peg$parseattr","peg$parsefield","peg$parsenegation","peg$parsematches","peg$parsehas","nth","peg$parsefirstChild","nthLast","peg$parselastChild","parseInt","peg$parsenthChild","peg$parsenthLastChild","peg$parsescope","peg$parseclass","n","index","factory","getPath","MATCHER_CACHE","WeakMap","getMatcher","selector","matcher","get","generateMatcher","set","toLowerCase","ancestry","nodeTypeKey","split","inPath","ancestor","fromPathIndex","field","k","matchers","estraverse","unshift","shift","visitorKeys","l","_typeof","sibling","adjacent","nthChild","matchClass","getVisitorKeys","filter","side","_slicedToArray","listProp","startIndex","indexOf","lowerBound","idx","ast","altSubjects","subjects","results","sel","_toConsumableArray","m","succeedingAncestry","parser","query","matches"],"mappings":"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"}